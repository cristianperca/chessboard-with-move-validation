{"version":3,"sources":["integrations/WithMoveValidation.js","Demo.js","registerServiceWorker.js","index.js"],"names":["HumanVsHuman","state","fen","dropSquareStyle","squareStyles","pieceSquare","square","history","removeHighlightSquare","setState","squareStyling","highlightSquare","sourceSquare","squaresToHighlight","highlightStyles","reduce","a","c","background","borderRadius","onDrop","targetSquare","game","move","from","to","promotion","verbose","onMouseOverSquare","moves","length","i","push","onMouseOutSquare","onDragOverSquare","backgroundColor","boxShadow","onSquareClick","onSquareRightClick","this","Chess","props","children","position","Component","WithMoveValidation","id","width","boardStyle","Demo","style","boardsContainer","display","justifyContent","alignItems","flexWrap","marginTop","marginBottom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.609f2d1c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chess from  \"chess.js\"; // import Chess from  \"chess.js\"(default) if recieving an error about new Chess() not being a constructor\n\nimport Chessboard from \"chessboardjsx\";\n\nclass HumanVsHuman extends Component {\n  static propTypes = { children: PropTypes.func };\n\n  state = {\n    fen: \"start\",\n    // square styles for active drop square\n    dropSquareStyle: {},\n    // custom square styles\n    squareStyles: {},\n    // square with the currently clicked piece\n    pieceSquare: \"\",\n    // currently clicked square\n    square: \"\",\n    // array of past game moves\n    history: []\n  };\n\n  componentDidMount() {\n    this.game = new Chess();\n  }\n\n  // keep clicked square style and remove hint squares\n  removeHighlightSquare = () => {\n    this.setState(({ pieceSquare, history }) => ({\n      squareStyles: squareStyling({ pieceSquare, history })\n    }));\n  };\n\n  // show possible moves\n  highlightSquare = (sourceSquare, squaresToHighlight) => {\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\n      (a, c) => {\n        return {\n          ...a,\n          ...{\n            [c]: {\n              background:\n                \"radial-gradient(circle, #fffc00 36%, transparent 40%)\",\n              borderRadius: \"50%\"\n            }\n          },\n          ...squareStyling({\n            history: this.state.history,\n            pieceSquare: this.state.pieceSquare\n          })\n        };\n      },\n      {}\n    );\n\n    this.setState(({ squareStyles }) => ({\n      squareStyles: { ...squareStyles, ...highlightStyles }\n    }));\n  };\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    // see if the move is legal\n    let move = this.game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // always promote to a queen for example simplicity\n    });\n\n    // illegal move\n    if (move === null) return;\n    this.setState(({ history, pieceSquare }) => ({\n      fen: this.game.fen(),\n      history: this.game.history({ verbose: true }),\n      squareStyles: squareStyling({ pieceSquare, history })\n    }));\n  };\n\n  onMouseOverSquare = square => {\n    // get list of possible moves for this square\n    let moves = this.game.moves({\n      square: square,\n      verbose: true\n    });\n\n    // exit if there are no moves available for this square\n    if (moves.length === 0) return;\n\n    let squaresToHighlight = [];\n    for (var i = 0; i < moves.length; i++) {\n      squaresToHighlight.push(moves[i].to);\n    }\n\n    this.highlightSquare(square, squaresToHighlight);\n  };\n\n  onMouseOutSquare = square => this.removeHighlightSquare(square);\n\n  // central squares get diff dropSquareStyles\n  onDragOverSquare = square => {\n    this.setState({\n      dropSquareStyle:\n        square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\n          ? { backgroundColor: \"cornFlowerBlue\" }\n          : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" }\n    });\n  };\n\n  onSquareClick = square => {\n    this.setState(({ history }) => ({\n      squareStyles: squareStyling({ pieceSquare: square, history }),\n      pieceSquare: square\n    }));\n\n    let move = this.game.move({\n      from: this.state.pieceSquare,\n      to: square,\n      promotion: \"q\" // always promote to a queen for example simplicity\n    });\n\n    // illegal move\n    if (move === null) return;\n\n    this.setState({\n      fen: this.game.fen(),\n      history: this.game.history({ verbose: true }),\n      pieceSquare: \"\"\n    });\n  };\n\n  onSquareRightClick = square =>\n    this.setState({\n      squareStyles: { [square]: { backgroundColor: \"deepPink\" } }\n    });\n\n  render() {\n    const { fen, dropSquareStyle, squareStyles } = this.state;\n\n    return this.props.children({\n      squareStyles,\n      position: fen,\n      onMouseOverSquare: this.onMouseOverSquare,\n      onMouseOutSquare: this.onMouseOutSquare,\n      onDrop: this.onDrop,\n      dropSquareStyle,\n      onDragOverSquare: this.onDragOverSquare,\n      onSquareClick: this.onSquareClick,\n      onSquareRightClick: this.onSquareRightClick\n    });\n  }\n}\n\nexport default function WithMoveValidation() {\n  return (\n    <div>\n      <HumanVsHuman>\n        {({\n          position,\n          onDrop,\n          onMouseOverSquare,\n          onMouseOutSquare,\n          squareStyles,\n          dropSquareStyle,\n          onDragOverSquare,\n          onSquareClick,\n          onSquareRightClick\n        }) => (\n          <Chessboard\n            id=\"humanVsHuman\"\n            width={320}\n            position={position}\n            onDrop={onDrop}\n            onMouseOverSquare={onMouseOverSquare}\n            onMouseOutSquare={onMouseOutSquare}\n            boardStyle={{\n              borderRadius: \"5px\",\n              boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n            }}\n            squareStyles={squareStyles}\n            dropSquareStyle={dropSquareStyle}\n            onDragOverSquare={onDragOverSquare}\n            onSquareClick={onSquareClick}\n            onSquareRightClick={onSquareRightClick}\n          />\n        )}\n      </HumanVsHuman>\n    </div>\n  );\n}\n\nconst squareStyling = ({ pieceSquare, history }) => {\n  const sourceSquare = history.length && history[history.length - 1].from;\n  const targetSquare = history.length && history[history.length - 1].to;\n\n  return {\n    [pieceSquare]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" },\n    ...(history.length && {\n      [sourceSquare]: {\n        backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n      }\n    }),\n    ...(history.length && {\n      [targetSquare]: {\n        backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n      }\n    })\n  };\n};\n","import React, { Component } from \"react\";\n\nimport WithMoveValidation from \"./integrations/WithMoveValidation\";\n\nclass Demo extends Component {\n  render() {\n    return (\n      <div>\n        <div style={boardsContainer}>\n          <WithMoveValidation />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Demo;\n\nconst boardsContainer = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  flexWrap: \"wrap\",\n  width: \"100vw\",\n  marginTop: 30,\n  marginBottom: 50\n};\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Demo from \"./Demo\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<Demo />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}